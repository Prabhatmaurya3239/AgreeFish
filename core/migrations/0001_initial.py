# Generated by Django 4.2.7 on 2025-09-17 12:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CropDiseaseDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_image', models.ImageField(upload_to='crop_images/')),
                ('crop_type', models.CharField(max_length=100)),
                ('disease_detected', models.CharField(blank=True, max_length=200, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('diseased', 'Diseased'), ('unknown', 'Unknown')], default='unknown', max_length=10)),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('suggestions_translated', models.JSONField(blank=True, null=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('service_type', models.CharField(default='Pesticide Spray', max_length=100)),
                ('crop_type', models.CharField(max_length=100)),
                ('area_acres', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)])),
                ('farm_latitude', models.FloatField()),
                ('farm_longitude', models.FloatField()),
                ('farm_address', models.TextField()),
                ('preferred_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('notes', models.TextField(blank=True)),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('final_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=10)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('disease_detection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cropdiseasedetection')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('farmer', 'Farmer'), ('worker', 'Spray Worker')], max_length=10)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('preferred_language', models.CharField(default='en', max_length=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.servicebooking')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to='core.userprofile')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to='core.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='WorkerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_radius_km', models.IntegerField(default=10)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('experience_years', models.IntegerField(default=0)),
                ('equipment_owned', models.TextField(help_text='List of equipment owned')),
                ('is_available', models.BooleanField(default=True)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_jobs', models.IntegerField(default=0)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='servicebooking',
            name='farmer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_bookings', to='core.userprofile'),
        ),
        migrations.AddField(
            model_name='servicebooking',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worker_bookings', to='core.userprofile'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('booking_created', 'Booking Created'), ('booking_accepted', 'Booking Accepted'), ('booking_completed', 'Booking Completed'), ('payment_success', 'Payment Success'), ('disease_detected', 'Disease Detected')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.servicebooking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_name', models.CharField(max_length=200)),
                ('farm_size_acres', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)])),
                ('crops_grown', models.TextField(help_text='List of crops grown')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='cropdiseasedetection',
            name='farmer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile'),
        ),
        migrations.CreateModel(
            name='BookingStatusUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=15)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_updates', to='core.servicebooking')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
